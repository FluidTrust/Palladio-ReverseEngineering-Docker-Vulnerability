package org.palladiosimulator.pcm.confidentiality.reverseengineering.feature.staticcodeanalysisinterface.parts.interfaces;

import java.util.Map;

import java.util.List;

import org.palladiosimulator.pcm.core.entity.Entity;

/**
 * A code analyst provides the possibility to analyze code in any way, for example as a static code analysis.
 * 
 * Parent interface for CodeAnalysts. Use this to enable multiple new CodeAnalysts later on.
 */
public interface ICodeAnalyst {
	
	/**
	 * Analyzes code that is provided as a map of Entities and a List of Strings.
	 * Each Entity is mapped onto a list of paths that point to a code repository of the entity.
	 * @param Paths to the code repositories of the entities.
	 * @return A CodeAnalyisResult objects that holds all important information.
	 */
	public ICodeAnalysisResult analyze(Map<Entity, List<String>> paths);	
		
}
