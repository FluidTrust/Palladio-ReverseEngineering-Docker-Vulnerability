
package org.palladiosimulator.pcm.confidentiality.reverseengineering.staticcodeanalysis.nvd_rest_api;

import java.util.ArrayList;
import java.util.List;
import javax.annotation.processing.Generated;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Defines the set of product configurations for a NVD applicability statement.
 * 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({ "CVE_data_version", "nodes" })
@Generated("jsonschema2pojo")
public class DefConfigurations {

    /**
     * 
     * (Required)
     * 
     */
    @JsonProperty("CVE_data_version")
    private String cveDataVersion;
    @JsonProperty("nodes")
    private List<DefNode> nodes = new ArrayList<DefNode>();

    @JsonProperty("CVE_data_version")
    public String getCVEDataVersion() {
        return cveDataVersion;
    }

    @JsonProperty("CVE_data_version")
    public void setCVEDataVersion(String cveDataVersion) {
        this.cveDataVersion = cveDataVersion;
    }

    @JsonProperty("nodes")
    public List<DefNode> getNodes() {
        return nodes;
    }

    @JsonProperty("nodes")
    public void setNodes(List<DefNode> nodes) {
        this.nodes = nodes;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(DefConfigurations.class.getName())
            .append('@')
            .append(Integer.toHexString(System.identityHashCode(this)))
            .append('[');
        sb.append("cveDataVersion");
        sb.append('=');
        sb.append(((this.cveDataVersion == null) ? "<null>" : this.cveDataVersion));
        sb.append(',');
        sb.append("nodes");
        sb.append('=');
        sb.append(((this.nodes == null) ? "<null>" : this.nodes));
        sb.append(',');
        if (sb.charAt((sb.length() - 1)) == ',') {
            sb.setCharAt((sb.length() - 1), ']');
        } else {
            sb.append(']');
        }
        return sb.toString();
    }

    @Override
    public int hashCode() {
        int result = 1;
        result = ((result * 31) + ((this.cveDataVersion == null) ? 0 : this.cveDataVersion.hashCode()));
        result = ((result * 31) + ((this.nodes == null) ? 0 : this.nodes.hashCode()));
        return result;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof DefConfigurations) == false) {
            return false;
        }
        DefConfigurations rhs = ((DefConfigurations) other);
        return (((this.cveDataVersion == rhs.cveDataVersion)
                || ((this.cveDataVersion != null) && this.cveDataVersion.equals(rhs.cveDataVersion)))
                && ((this.nodes == rhs.nodes) || ((this.nodes != null) && this.nodes.equals(rhs.nodes))));
    }

}
