
package org.palladiosimulator.pcm.confidentiality.reverseengineering.staticcodeanalysis.nvd_rest_api;

import java.util.ArrayList;
import java.util.List;
import javax.annotation.processing.Generated;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
    "product_data"
})
@Generated("jsonschema2pojo")
public class Product {

    /**
     * 
     * (Required)
     * 
     */
    @JsonProperty("product_data")
    private List<Product__1> productData = new ArrayList<Product__1>();

    /**
     * 
     * (Required)
     * 
     */
    @JsonProperty("product_data")
    public List<Product__1> getProductData() {
        return productData;
    }

    /**
     * 
     * (Required)
     * 
     */
    @JsonProperty("product_data")
    public void setProductData(List<Product__1> productData) {
        this.productData = productData;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(Product.class.getName()).append('@').append(Integer.toHexString(System.identityHashCode(this))).append('[');
        sb.append("productData");
        sb.append('=');
        sb.append(((this.productData == null)?"<null>":this.productData));
        sb.append(',');
        if (sb.charAt((sb.length()- 1)) == ',') {
            sb.setCharAt((sb.length()- 1), ']');
        } else {
            sb.append(']');
        }
        return sb.toString();
    }

    @Override
    public int hashCode() {
        int result = 1;
        result = ((result* 31)+((this.productData == null)? 0 :this.productData.hashCode()));
        return result;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Product) == false) {
            return false;
        }
        Product rhs = ((Product) other);
        return ((this.productData == rhs.productData)||((this.productData!= null)&&this.productData.equals(rhs.productData)));
    }

}
