package org.palladiosimulator.pcm.confidentiality.reverseengineering.staticcodeanalysis.parts;

import java.net.URI;

import javax.ws.rs.ProcessingException;
import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.WebTarget;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.UriBuilder;

import org.apache.log4j.Logger;
import org.palladiosimulator.pcm.confidentiality.attackerSpecification.attackSpecification.CVEVulnerability;
import org.palladiosimulator.pcm.confidentiality.attackerSpecification.attackSpecification.CWEVulnerability;
import org.palladiosimulator.pcm.confidentiality.attackerSpecification.attackSpecification.impl.AttackSpecificationFactoryImpl;
import org.palladiosimulator.pcm.confidentiality.reverseengineering.staticcodeanalysis.iface.parts.interfaces.IVulnerabilityDatabase;
import org.palladiosimulator.pcm.confidentiality.reverseengineering.staticcodeanalysis.nvd_rest_api.NvdResponse;

import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

public class NvdVulnerabilityDatabase implements IVulnerabilityDatabase {
    private static final Logger LOG = Logger.getLogger(NvdVulnerabilityDatabase.class);

    private final Client client;
    private final WebTarget target;

    public NvdVulnerabilityDatabase() {
        client = ClientBuilder.newClient();
        client.register(JacksonJsonProvider.class);
        URI baseUri = UriBuilder.fromUri("https://services.nvd.nist.gov/rest/json/cve/1.0/")
            .build();
        target = client.target(baseUri);
    }

    @Override
    public CWEVulnerability getCWEVulnerability(String identifier) {
        // TODO is this even useful?
        return null;
    }

    @Override
    public CVEVulnerability getCVEVulnerability(String identifier) {
        NvdResponse response = null;
        try {
            response = target.path(identifier)
                .request(MediaType.APPLICATION_JSON)
                .get(NvdResponse.class);
        } catch (ProcessingException e) {
            LOG.error("Could not process NVD API response:\n" + e.getMessage());
            return null;
        }
        if (response.getTotalResults() > 0) {
            LOG.warn(response.getResult().getCVEItems().get(0));
        }
        return AttackSpecificationFactoryImpl.eINSTANCE.createCVEVulnerability();
    }

}
