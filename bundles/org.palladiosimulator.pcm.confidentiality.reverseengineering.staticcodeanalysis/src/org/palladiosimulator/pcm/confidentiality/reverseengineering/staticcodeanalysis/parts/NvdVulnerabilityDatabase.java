package org.palladiosimulator.pcm.confidentiality.reverseengineering.staticcodeanalysis.parts;

import java.io.IOException;

import org.apache.log4j.Logger;
import org.jsoup.Jsoup;
import org.palladiosimulator.pcm.confidentiality.attackerSpecification.attackSpecification.CVEVulnerability;
import org.palladiosimulator.pcm.confidentiality.attackerSpecification.attackSpecification.CWEVulnerability;
import org.palladiosimulator.pcm.confidentiality.attackerSpecification.attackSpecification.impl.AttackSpecificationFactoryImpl;
import org.palladiosimulator.pcm.confidentiality.reverseengineering.staticcodeanalysis.iface.parts.interfaces.IVulnerabilityDatabase;
import org.palladiosimulator.pcm.confidentiality.reverseengineering.staticcodeanalysis.nvd_rest_api.NvdResponse;

import com.google.gson.Gson;
import com.google.gson.JsonSyntaxException;

public class NvdVulnerabilityDatabase implements IVulnerabilityDatabase {
    private static final Logger LOG = Logger.getLogger(NvdVulnerabilityDatabase.class);
    private static final String API_ENTRY_POINT = "https://services.nvd.nist.gov/rest/json/cve/1.0/";

    @Override
    public CWEVulnerability getCWEVulnerability(String identifier) {
        // TODO is this even useful?
        return null;
    }

    @Override
    public CVEVulnerability getCVEVulnerability(String identifier) {
        String url = API_ENTRY_POINT + identifier;
        String jsonResponse = null;
        try {
            jsonResponse = Jsoup.connect(url)
                .ignoreContentType(true)
                .get()
                .body()
                .text();
        } catch (IOException e) {
            LOG.error("Could not contact NVD API:\n" + e.getMessage());
            return null;
        }

        Gson gson = new Gson();
        NvdResponse response = null;
        try {
            response = gson.fromJson(jsonResponse, NvdResponse.class);
        } catch (JsonSyntaxException e) {
            LOG.error("Could not process NVD API response:\n" + e.getMessage());
            return null;
        }
        if (response.getTotalResults() > 0) {
            LOG.warn(response.getResult()
                .getCVEItems()
                .get(0));
        }
        return AttackSpecificationFactoryImpl.eINSTANCE.createCVEVulnerability();
    }

}
